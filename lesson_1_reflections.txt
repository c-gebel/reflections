* How did viewing a diff between two versions of a file help you see the bug that was introduced?
The proghram showed the two lines of versions, who where nearly equal except from the typo.

* How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
Normally you don't notice when an error happens. When a history is present, you can different listing versions compare with the recent one.

* Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
The reason is that the programming files depend on each other, while simple letters or documentations (Google Docs) don't.

* How can you use the commands git log and git diff to view the history of files?
I use git log when I need an overview of things I've changed globally (by writing my comments
and I use git diff if I need to see what lines where changed from one file version to another.

* How might using version control make you more confident to make changes that could break something?
If I could get back to a newer version, when the error was killed in the listing of an old commit

* Now that you have your workspace set up, what do you want to try using Git for?
A colorful version control ;-)

* What happens when you initialize a repository? Why do you need to do it?
When I initialize a repository the repository gets created. A directory named .git gets created. I have to do all that to prepare the directory and files in it to use a commit.





